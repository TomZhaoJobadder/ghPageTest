{"highlightCode":"<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> OnInit <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">TreeNodeInterface</span> <span class=\"token punctuation\">{</span>\r\n  key<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">;</span>\r\n  name<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">;</span>\r\n  age<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">number</span><span class=\"token punctuation\">;</span>\r\n  level<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">number</span><span class=\"token punctuation\">;</span>\r\n  expand<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">boolean</span><span class=\"token punctuation\">;</span>\r\n  address<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">;</span>\r\n  children<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> TreeNodeInterface<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n  parent<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> TreeNodeInterface<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n  selector<span class=\"token punctuation\">:</span> <span class=\"token string\">'nz-demo-table-expand-children'</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token template-string\">template: <span class=\"token html\">`\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-table</span> <span class=\"token attr-name\">#expandTable</span> <span class=\"token attr-name\">[nzData]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>listOfMapData<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">nzTableLayout</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>fixed<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\r\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>thead</span><span class=\"token punctuation\">></span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\r\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Name<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\r\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Age<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\r\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Address<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\r\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>thead</span><span class=\"token punctuation\">></span></span>\r\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tbody</span><span class=\"token punctuation\">></span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ng-container</span> <span class=\"token attr-name\">*ngFor</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>let data of expandTable.data<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\r\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ng-container</span> <span class=\"token attr-name\">*ngFor</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>let item of mapOfExpandedData[data.key]<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\r\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span> <span class=\"token attr-name\">*ngIf</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>(item.parent &amp;&amp; item.parent.expand) || !item.parent<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\r\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span>\r\n                <span class=\"token attr-name\">[nzIndentSize]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>item.level! * 20<span class=\"token punctuation\">\"</span></span>\r\n                <span class=\"token attr-name\">[nzShowExpand]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>!!item.children<span class=\"token punctuation\">\"</span></span>\r\n                <span class=\"token attr-name\">[(nzExpand)]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>item.expand<span class=\"token punctuation\">\"</span></span>\r\n                <span class=\"token attr-name\">(nzExpandChange)</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>collapse(mapOfExpandedData[data.key], item, $event)<span class=\"token punctuation\">\"</span></span>\r\n              <span class=\"token punctuation\">></span></span>\r\n                {{ item.name }}\r\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\r\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>{{ item.age }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\r\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>{{ item.address }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\r\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\r\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ng-container</span><span class=\"token punctuation\">></span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ng-container</span><span class=\"token punctuation\">></span></span>\r\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tbody</span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-table</span><span class=\"token punctuation\">></span></span>\r\n  `</span></span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NzDemoTableExpandChildrenComponent</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">OnInit</span> <span class=\"token punctuation\">{</span>\r\n  listOfMapData<span class=\"token punctuation\">:</span> TreeNodeInterface<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\r\n    <span class=\"token punctuation\">{</span>\r\n      key<span class=\"token punctuation\">:</span> `<span class=\"token number\">1</span>`<span class=\"token punctuation\">,</span>\r\n      name<span class=\"token punctuation\">:</span> <span class=\"token string\">'John Brown sr.'</span><span class=\"token punctuation\">,</span>\r\n      age<span class=\"token punctuation\">:</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span>\r\n      address<span class=\"token punctuation\">:</span> <span class=\"token string\">'New York No. 1 Lake Park'</span><span class=\"token punctuation\">,</span>\r\n      children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\r\n        <span class=\"token punctuation\">{</span>\r\n          key<span class=\"token punctuation\">:</span> `<span class=\"token number\">1</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>`<span class=\"token punctuation\">,</span>\r\n          name<span class=\"token punctuation\">:</span> <span class=\"token string\">'John Brown'</span><span class=\"token punctuation\">,</span>\r\n          age<span class=\"token punctuation\">:</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span>\r\n          address<span class=\"token punctuation\">:</span> <span class=\"token string\">'New York No. 2 Lake Park'</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token punctuation\">{</span>\r\n          key<span class=\"token punctuation\">:</span> `<span class=\"token number\">1</span><span class=\"token operator\">-</span><span class=\"token number\">2</span>`<span class=\"token punctuation\">,</span>\r\n          name<span class=\"token punctuation\">:</span> <span class=\"token string\">'John Brown jr.'</span><span class=\"token punctuation\">,</span>\r\n          age<span class=\"token punctuation\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\r\n          address<span class=\"token punctuation\">:</span> <span class=\"token string\">'New York No. 3 Lake Park'</span><span class=\"token punctuation\">,</span>\r\n          children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\r\n            <span class=\"token punctuation\">{</span>\r\n              key<span class=\"token punctuation\">:</span> `<span class=\"token number\">1</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>`<span class=\"token punctuation\">,</span>\r\n              name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Jimmy Brown'</span><span class=\"token punctuation\">,</span>\r\n              age<span class=\"token punctuation\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span>\r\n              address<span class=\"token punctuation\">:</span> <span class=\"token string\">'New York No. 3 Lake Park'</span>\r\n            <span class=\"token punctuation\">}</span>\r\n          <span class=\"token punctuation\">]</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token punctuation\">{</span>\r\n          key<span class=\"token punctuation\">:</span> `<span class=\"token number\">1</span><span class=\"token operator\">-</span><span class=\"token number\">3</span>`<span class=\"token punctuation\">,</span>\r\n          name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Jim Green sr.'</span><span class=\"token punctuation\">,</span>\r\n          age<span class=\"token punctuation\">:</span> <span class=\"token number\">72</span><span class=\"token punctuation\">,</span>\r\n          address<span class=\"token punctuation\">:</span> <span class=\"token string\">'London No. 1 Lake Park'</span><span class=\"token punctuation\">,</span>\r\n          children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\r\n            <span class=\"token punctuation\">{</span>\r\n              key<span class=\"token punctuation\">:</span> `<span class=\"token number\">1</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>`<span class=\"token punctuation\">,</span>\r\n              name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Jim Green'</span><span class=\"token punctuation\">,</span>\r\n              age<span class=\"token punctuation\">:</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span>\r\n              address<span class=\"token punctuation\">:</span> <span class=\"token string\">'London No. 2 Lake Park'</span><span class=\"token punctuation\">,</span>\r\n              children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\r\n                <span class=\"token punctuation\">{</span>\r\n                  key<span class=\"token punctuation\">:</span> `<span class=\"token number\">1</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>`<span class=\"token punctuation\">,</span>\r\n                  name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Jim Green jr.'</span><span class=\"token punctuation\">,</span>\r\n                  age<span class=\"token punctuation\">:</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span>\r\n                  address<span class=\"token punctuation\">:</span> <span class=\"token string\">'London No. 3 Lake Park'</span>\r\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n                <span class=\"token punctuation\">{</span>\r\n                  key<span class=\"token punctuation\">:</span> `<span class=\"token number\">1</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span><span class=\"token number\">2</span>`<span class=\"token punctuation\">,</span>\r\n                  name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Jimmy Green sr.'</span><span class=\"token punctuation\">,</span>\r\n                  age<span class=\"token punctuation\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span>\r\n                  address<span class=\"token punctuation\">:</span> <span class=\"token string\">'London No. 4 Lake Park'</span>\r\n                <span class=\"token punctuation\">}</span>\r\n              <span class=\"token punctuation\">]</span>\r\n            <span class=\"token punctuation\">}</span>\r\n          <span class=\"token punctuation\">]</span>\r\n        <span class=\"token punctuation\">}</span>\r\n      <span class=\"token punctuation\">]</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">{</span>\r\n      key<span class=\"token punctuation\">:</span> `<span class=\"token number\">2</span>`<span class=\"token punctuation\">,</span>\r\n      name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Joe Black'</span><span class=\"token punctuation\">,</span>\r\n      age<span class=\"token punctuation\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\r\n      address<span class=\"token punctuation\">:</span> <span class=\"token string\">'Sidney No. 1 Lake Park'</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n  mapOfExpandedData<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> TreeNodeInterface<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token function\">collapse</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">:</span> TreeNodeInterface<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> TreeNodeInterface<span class=\"token punctuation\">,</span> $event<span class=\"token punctuation\">:</span> <span class=\"token keyword\">boolean</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>$event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        data<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">=</span><span class=\"token operator\">></span> a<span class=\"token punctuation\">.</span>key <span class=\"token operator\">===</span> d<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span>\r\n          target<span class=\"token punctuation\">.</span>expand <span class=\"token operator\">=</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">;</span>\r\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">collapse</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token function\">convertTreeToList</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">:</span> TreeNodeInterface<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> TreeNodeInterface<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> stack<span class=\"token punctuation\">:</span> TreeNodeInterface<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> array<span class=\"token punctuation\">:</span> TreeNodeInterface<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> hashMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n    stack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>root<span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> expand<span class=\"token punctuation\">:</span> <span class=\"token keyword\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>stack<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">visitNode</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> hashMap<span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n          stack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">.</span>level<span class=\"token operator\">!</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> expand<span class=\"token punctuation\">:</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">,</span> parent<span class=\"token punctuation\">:</span> node <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">return</span> array<span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token function\">visitNode</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">:</span> TreeNodeInterface<span class=\"token punctuation\">,</span> hashMap<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">boolean</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">:</span> TreeNodeInterface<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>hashMap<span class=\"token punctuation\">[</span>node<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      hashMap<span class=\"token punctuation\">[</span>node<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">;</span>\r\n      array<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token function\">ngOnInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listOfMapData<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>item <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mapOfExpandedData<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">convertTreeToList</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n","rawCode":"import { Component, OnInit } from '@angular/core';\r\n\r\nexport interface TreeNodeInterface {\r\n  key: string;\r\n  name: string;\r\n  age?: number;\r\n  level?: number;\r\n  expand?: boolean;\r\n  address?: string;\r\n  children?: TreeNodeInterface[];\r\n  parent?: TreeNodeInterface;\r\n}\r\n\r\n@Component({\r\n  selector: 'nz-demo-table-expand-children',\r\n  template: `\r\n    <nz-table #expandTable [nzData]=\"listOfMapData\" nzTableLayout=\"fixed\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Age</th>\r\n          <th>Address</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <ng-container *ngFor=\"let data of expandTable.data\">\r\n          <ng-container *ngFor=\"let item of mapOfExpandedData[data.key]\">\r\n            <tr *ngIf=\"(item.parent && item.parent.expand) || !item.parent\">\r\n              <td\r\n                [nzIndentSize]=\"item.level! * 20\"\r\n                [nzShowExpand]=\"!!item.children\"\r\n                [(nzExpand)]=\"item.expand\"\r\n                (nzExpandChange)=\"collapse(mapOfExpandedData[data.key], item, $event)\"\r\n              >\r\n                {{ item.name }}\r\n              </td>\r\n              <td>{{ item.age }}</td>\r\n              <td>{{ item.address }}</td>\r\n            </tr>\r\n          </ng-container>\r\n        </ng-container>\r\n      </tbody>\r\n    </nz-table>\r\n  `\r\n})\r\nexport class NzDemoTableExpandChildrenComponent implements OnInit {\r\n  listOfMapData: TreeNodeInterface[] = [\r\n    {\r\n      key: `1`,\r\n      name: 'John Brown sr.',\r\n      age: 60,\r\n      address: 'New York No. 1 Lake Park',\r\n      children: [\r\n        {\r\n          key: `1-1`,\r\n          name: 'John Brown',\r\n          age: 42,\r\n          address: 'New York No. 2 Lake Park'\r\n        },\r\n        {\r\n          key: `1-2`,\r\n          name: 'John Brown jr.',\r\n          age: 30,\r\n          address: 'New York No. 3 Lake Park',\r\n          children: [\r\n            {\r\n              key: `1-2-1`,\r\n              name: 'Jimmy Brown',\r\n              age: 16,\r\n              address: 'New York No. 3 Lake Park'\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          key: `1-3`,\r\n          name: 'Jim Green sr.',\r\n          age: 72,\r\n          address: 'London No. 1 Lake Park',\r\n          children: [\r\n            {\r\n              key: `1-3-1`,\r\n              name: 'Jim Green',\r\n              age: 42,\r\n              address: 'London No. 2 Lake Park',\r\n              children: [\r\n                {\r\n                  key: `1-3-1-1`,\r\n                  name: 'Jim Green jr.',\r\n                  age: 25,\r\n                  address: 'London No. 3 Lake Park'\r\n                },\r\n                {\r\n                  key: `1-3-1-2`,\r\n                  name: 'Jimmy Green sr.',\r\n                  age: 18,\r\n                  address: 'London No. 4 Lake Park'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      key: `2`,\r\n      name: 'Joe Black',\r\n      age: 32,\r\n      address: 'Sidney No. 1 Lake Park'\r\n    }\r\n  ];\r\n  mapOfExpandedData: { [key: string]: TreeNodeInterface[] } = {};\r\n\r\n  collapse(array: TreeNodeInterface[], data: TreeNodeInterface, $event: boolean): void {\r\n    if (!$event) {\r\n      if (data.children) {\r\n        data.children.forEach(d => {\r\n          const target = array.find(a => a.key === d.key)!;\r\n          target.expand = false;\r\n          this.collapse(array, target, false);\r\n        });\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  convertTreeToList(root: TreeNodeInterface): TreeNodeInterface[] {\r\n    const stack: TreeNodeInterface[] = [];\r\n    const array: TreeNodeInterface[] = [];\r\n    const hashMap = {};\r\n    stack.push({ ...root, level: 0, expand: false });\r\n\r\n    while (stack.length !== 0) {\r\n      const node = stack.pop()!;\r\n      this.visitNode(node, hashMap, array);\r\n      if (node.children) {\r\n        for (let i = node.children.length - 1; i >= 0; i--) {\r\n          stack.push({ ...node.children[i], level: node.level! + 1, expand: false, parent: node });\r\n        }\r\n      }\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  visitNode(node: TreeNodeInterface, hashMap: { [key: string]: boolean }, array: TreeNodeInterface[]): void {\r\n    if (!hashMap[node.key]) {\r\n      hashMap[node.key] = true;\r\n      array.push(node);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.listOfMapData.forEach(item => {\r\n      this.mapOfExpandedData[item.key] = this.convertTreeToList(item);\r\n    });\r\n  }\r\n}\r\n"}
